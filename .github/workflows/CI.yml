name: CI

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'

permissions:
  contents: read
  id-token: write

jobs:
  composer_validate:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'

      - name: Validate composer.json
        run: composer validate --strict

  phpunit:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        php-version:
          - '7.4'
          - '8.0'
          - '8.1'
          - '8.2'
          - '8.3'
          - '8.4'

    steps:
      - uses: actions/checkout@v5

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}

      - name: Composer get cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-php${{ matrix.php-version }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: |
            ${{ runner.os }}-php${{ matrix.php-version }}-composer-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Setup problem matchers for PHPUnit
        run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Run Tests
        run: ./vendors/bin/phpunit --coverage-clover coverage.xml --log-junit junit.xml --colors=always

      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          use_oidc: true
          file: ./junit.xml
          flags: php${{ matrix.php-version }}
          name: PHP ${{ matrix.php-version }}

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          use_oidc: true
          flags: php${{ matrix.php-version }}
          name: PHP ${{ matrix.php-version }}

  phpstan:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'

      - name: Composer get cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-php8.4-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: |
            ${{ runner.os }}-php8.4-composer-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Run static type analysis
        run: ./vendor/bin/phpstan
